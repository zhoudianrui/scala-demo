play.i18n.langs = [ "en" ]
play.modules.enabled += "com.ximalaya.demo.support.PlaySpringModule"
akka {
  actor {
    default-dispatcher {
      executor = "thread-pool-executor"

      # This will be used if you have set "executor = "thread-pool-executor""
      # Underlying thread pool implementation is java.util.concurrent.ThreadPoolExecutor
      thread-pool-executor {
        # Keep alive time for threads
        keep-alive-time = 60s

        # Define a fixed thread pool size with this property. The corePoolSize
        # and the maximumPoolSize of the ThreadPoolExecutor will be set to this
        # value, if it is defined. Then the other pool-size properties will not
        # be used.
        #
        # Valid values are: `off` or a positive integer.
        fixed-pool-size = 5000

        # Min number of threads to cap factor-based corePoolSize number to
        core-pool-size-min = 1000

        # The core-pool-size-factor is used to determine corePoolSize of the
        # ThreadPoolExecutor using the following formula:
        # ceil(available processors * factor).
        # Resulting size is then bounded by the core-pool-size-min and
        # core-pool-size-max values.
        core-pool-size-factor = 130.0

        # Max number of threads to cap factor-based corePoolSize number to
        core-pool-size-max = 5000

        # Minimum number of threads to cap factor-based maximumPoolSize number to
        max-pool-size-min = 1000

        # The max-pool-size-factor is used to determine maximumPoolSize of the
        # ThreadPoolExecutor using the following formula:
        # ceil(available processors * factor)
        # The maximumPoolSize will not be less than corePoolSize.
        # It is only used if using a bounded task queue.
        max-pool-size-factor  = 130.0

        # Max number of threads to cap factor-based maximumPoolSize number to
        max-pool-size-max = 5000

        # Specifies the bounded capacity of the task queue (< 1 == unbounded)
        task-queue-size = -1

        # Specifies which type of task queue will be used, can be "array" or
        # "linked" (default)
        task-queue-type = "linked"

        # Allow core threads to time out
        allow-core-timeout = on
      }

      # fork-join-executor {
      #   # Settings this to 1 instead of 3 seems to improve performance.
      #   parallelism-factor = 130.0

      #   # @richdougherty: Not sure why this is set below the Akka
      #   # default.
      #   parallelism-min = 1000
      #   parallelism-max = 5000

      #   # Setting this to LIFO changes the fork-join-executor
      #   # to use a stack discipline for task scheduling. This usually
      #   # improves throughput at the cost of possibly increasing
      #   # latency and risking task starvation (which should be rare).
      #   task-peeking-mode = LIFO
      # }
    }
  }
}

